/**
 * @copyright   2010-2016, The Titon Project
 * @license     http://opensource.org/licenses/BSD-3-Clause
 * @link        http://titon.io
 */

/**
 * Target the direct children of a button group, the li or button.
 */
@mixin button-group-children {
    > li,
    > #{map-get($titon-button, "class")} {
        @content;
    }
}

/**
 * Target the first button within a button group.
 */
@mixin button-group-first-child {
    > li:first-child #{map-get($titon-button, "class")},
    > #{map-get($titon-button, "class")}:first-child {
        @content;
    }
}

/**
 * Target the last button within a button group.
 */
@mixin button-group-last-child {
    > li:last-child #{map-get($titon-button, "class")},
    > #{map-get($titon-button, "class")}:last-child {
        @content;
    }
}

/**
 * Generate a specific state for the custom checkbox toggle.
 *
 * @param string $pseudo
 */
@mixin checkbox-state($pseudo) {
    #{map-get($titon-checkbox, "class")} {
        input:#{$pseudo} + #{map-get($titon-checkbox, "class-toggle")} {
            @content;
        }
    }
}

/**
 * Generate a specific state for the custom radio toggle.
 *
 * @param string $pseudo
 */
@mixin radio-state($pseudo) {
    #{map-get($titon-radio, "class")} {
        input:#{$pseudo} + #{map-get($titon-radio, "class-toggle")} {
            @content;
        }
    }
}

/**
 * Generate show/hide display classes for a specific class.
 *
 * @param string $class
 */
@mixin responsive-display($class) {
    #{$class} { display: block !important; }
    table#{$class} { display: table !important; }
    tr#{$class} { display: table-row !important; }
    td#{$class},
    th#{$class} { display: table-cell !important; }
    li#{$class} { display: list-item !important; }
}

/**
 * Generate a specific state for the custom select toggle.
 *
 * @param string $pseudo
 */
@mixin select-state($pseudo) {
    #{map-get($titon-select, "class")} {
        select:#{$pseudo} + #{map-get($titon-select, "class-toggle")} {
            @content;
        }
    }
}

/**
 * Generate a specific state for the switch toggle.
 *
 * @param string $pseudo
 */
@mixin switch-state($pseudo) {
    #{map-get($titon-switch, "class")} {
        input:#{$pseudo} + #{map-get($titon-switch, "class-bar")} {
            @content;
        }
    }
}

