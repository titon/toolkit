/**
 * @copyright   2010-2016, The Titon Project
 * @license     http://opensource.org/licenses/BSD-3-Clause
 * @link        http://titon.io
 */

$titon-internal-modules-exported: () !global;

/**
 * Compile a component into the final output only once.
 * Also check to see if it has been excluded from the output all together.
 *
 * @param string $module
 */
@mixin export($module) {

    // Module is excluded, so do nothing
    @if (map-get($titon-settings-flags, "all-modules") == false and index(setting("exclude-modules"), $module) != null) {

    // Module hasn't been exported yet, so export it and log usage
    } @else if (index($titon-internal-modules-exported, $module) == null) {
        $titon-internal-modules-exported: append($titon-internal-modules-exported, $module) !global;

        @content;
    }
}

/**
 * Clear all floats within the container.
 */
@mixin clear-fix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

/**
 * Render small font sizes and padding.
 */
@mixin size-small {
    font-size: theme-setting("small-font-size");
    padding: theme-setting("small-padding");
}

/**
 * Render medium font sizes and padding (default size).
 */
@mixin size-medium {
    font-size: theme-setting("medium-font-size");
    padding: theme-setting("medium-padding");
}

/**
 * Render large font sizes and padding.
 */
@mixin size-large {
    font-size: theme-setting("large-font-size");
    padding: theme-setting("large-padding");
}

/**
 * Generate a self selector or parent selector for assigning size classes

 * @param bool [$self] - Apply to self
 * @param bool [$parent] - Apply to parent
 */
@mixin is-size($size, $self: true, $parent: false) {
    $selectors: ();

    @if $self {
        $selectors: append($selectors, unquote("&" + $size), "comma");
    }

    @if $parent {
        $selectors: append($selectors, unquote($size + " &"), "comma");
    }

    #{$selectors} {
        @content;
    }
}

/**
 * Include content for the small size if enabled in the feature flags.
 *
 * @param bool [$self] - Apply to self
 * @param bool [$parent] - Apply to parent
 */
@mixin is-size-small($self: true, $parent: false) {
    @if is-feature-enabled("small-size") {
        @include is-size(map-get($titon-global, "class-small"), $self, $parent) {
            @content;
        }
    }
}

/**
 * Include content for the large size if enabled in the feature flags.
 *
 * @param bool [$self] - Apply to self
 * @param bool [$parent] - Apply to parent
 */
@mixin is-size-large($self: true, $parent: false) {
    @if is-feature-enabled("large-size") {
        @include is-size(map-get($titon-global, "class-large"), $self, $parent) {
            @content;
        }
    }
}

/**
 * Include content for LTR elements.
 */
@mixin ltr() {
    &[dir="ltr"] {
        @content;
    }
}

/**
 * Include content for RTL elements.
 */
@mixin rtl() {
    &[dir="rtl"] {
        @content;
    }
}
